// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: posts.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createPost = `-- name: CreatePost :one
WITH Post AS (
    INSERT INTO "posts" (
        title,
        url,
        body,
        subleddit_id,
        user_id
    ) VALUES (
        $1, $2, $3, $4, $5
    ) RETURNING id, title, url, body, user_id, subleddit_id, created_at, updated_at
) 
SELECT post.id, post.title, post.url, post.body, post.user_id, post.subleddit_id, post.created_at, post.updated_at, users.id, users.username, users.password, users.avatar, users.role, users.created_at, users.updated_at, subleddits.id, subleddits.name, subleddits.user_id, subleddits.created_at, subleddits.updated_at 
FROM Post
JOIN users ON Post.user_id = users.id
JOIN subleddits ON Post.subleddit_id = subleddits.id
`

type CreatePostParams struct {
	Title       string         `json:"title"`
	Url         sql.NullString `json:"url"`
	Body        sql.NullString `json:"body"`
	SubledditID uuid.NullUUID  `json:"subleddit_id"`
	UserID      uuid.NullUUID  `json:"user_id"`
}

type CreatePostRow struct {
	ID          uuid.UUID      `json:"id"`
	Title       string         `json:"title"`
	Url         sql.NullString `json:"url"`
	Body        sql.NullString `json:"body"`
	UserID      uuid.NullUUID  `json:"user_id"`
	SubledditID uuid.NullUUID  `json:"subleddit_id"`
	CreatedAt   sql.NullTime   `json:"created_at"`
	UpdatedAt   sql.NullTime   `json:"updated_at"`
	User        User           `json:"user"`
	Subleddit   Subleddit      `json:"subleddit"`
}

func (q *Queries) CreatePost(ctx context.Context, arg CreatePostParams) (CreatePostRow, error) {
	row := q.db.QueryRowContext(ctx, createPost,
		arg.Title,
		arg.Url,
		arg.Body,
		arg.SubledditID,
		arg.UserID,
	)
	var i CreatePostRow
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.Url,
		&i.Body,
		&i.UserID,
		&i.SubledditID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.User.ID,
		&i.User.Username,
		&i.User.Password,
		&i.User.Avatar,
		&i.User.Role,
		&i.User.CreatedAt,
		&i.User.UpdatedAt,
		&i.Subleddit.ID,
		&i.Subleddit.Name,
		&i.Subleddit.UserID,
		&i.Subleddit.CreatedAt,
		&i.Subleddit.UpdatedAt,
	)
	return i, err
}
